name: Test and Deploy Pipeline

env:
    build_number: ${{ github.run_id }}

concurrency:
    group: test-deploy
    cancel-in-progress: true

on:
    push:
        branches:
            - master

jobs:
    build-web:
        runs-on: ubuntu-latest
        environment: staging
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  file: ./Dockerfile
                  context: .
                  push: true
                  tags: mltshp/mltshp-web:build-${{ env.build_number }}

    build-worker:
        runs-on: ubuntu-latest
        environment: staging
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  file: ./Dockerfile.worker
                  context: .
                  push: true
                  tags: mltshp/mltshp-worker:build-${{ env.build_number }}

    test:
        needs: [build-web]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Pull and tag web image
              run: |
                  docker pull mltshp/mltshp-web:build-${{ env.build_number }}
                  docker tag mltshp/mltshp-web:build-${{ env.build_number }} mltshp/mltshp-web:latest

            - name: Start services with Docker Compose
              run: docker compose -f release/docker-compose.yml up -d

            - name: Wait for services to be ready
              run: sleep 10

            - name: Run tests
              run: docker exec -t release-mltshp-1 ./run-tests.sh

            - name: Run Coveralls report
              env:
                  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
              run: docker exec -t -e COVERALLS_REPO_TOKEN release-mltshp-1 ./coveralls-report.sh

            - name: Stop services and clean up
              run: |
                  docker compose -f release/docker-compose.yml down
                  docker container prune -f

    staging:
      needs: [test]
      runs-on: ubuntu-latest
      environment: staging
      if: success()
      steps:
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
                username: ${{ vars.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Pull and tag web image
            run: |
                docker pull mltshp/mltshp-web:build-${{ env.build_number }}
                docker tag mltshp/mltshp-web:build-${{ env.build_number }} mltshp/mltshp-web:staging
                docker push mltshp/mltshp-web:staging

    deploy:
        needs: [test, build-worker]
        runs-on: ubuntu-latest
        environment: production
        if: success()
        steps:
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Pull and tag web image
              run: |
                  docker pull mltshp/mltshp-web:build-${{ env.build_number }}
                  docker tag mltshp/mltshp-web:build-${{ env.build_number }} mltshp/mltshp-web:latest
                  docker push mltshp/mltshp-web:latest

            - name: Pull and tag worker image
              run: |
                  docker pull mltshp/mltshp-worker:build-${{ env.build_number }}
                  docker tag mltshp/mltshp-worker:build-${{ env.build_number }} mltshp/mltshp-worker:latest
                  docker push mltshp/mltshp-worker:latest

            - name: Notify Slack
              uses: 8398a7/action-slack@v3
              with:
                  status: success
                  fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
              env:
                  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

# MLTSHP.com dev config

worker_rlimit_nofile 20480;

error_log /srv/mltshp.com/logs/error.log;

events {
    worker_connections 20480;
    use epoll;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    upstream frontends {
        server 127.0.0.1:8000;
    }

    sendfile on;
    proxy_read_timeout 200;
    tcp_nopush on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    # This will load a dynamically generated "resolver n.n.n.n;" line
    # that will have the correct resolver IP address for the dev
    # docker instance.
    include resolvers.conf;

    server {
        listen 80;

        access_log /srv/mltshp.com/logs/access.log;

        # Allow file uploads
        client_max_body_size 20M;

        location = /upload {
            # Pass altered request body to this location
            upload_pass /internalupload;

            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            upload_store /mnt/tmpuploads 1;

            # Allow uploaded files to be read only by user
            upload_store_access all:rw;

            # Set specified fields in request body
            upload_set_form_field "${upload_field_name}_name" "$upload_file_name";
            upload_set_form_field "${upload_field_name}_content_type" "$upload_content_type";
            upload_set_form_field "${upload_field_name}_path" "$upload_tmp_path";

            # Inform backend about hash and size of a file
            upload_aggregate_form_field "${upload_field_name}_sha1" "$upload_file_sha1";
            upload_aggregate_form_field "${upload_field_name}_size" "$upload_file_size";

            upload_pass_form_field "_xsrf";
            upload_pass_form_field "message";
            upload_pass_form_field "shake_id";

            upload_cleanup 400 404 499 500-505;
        }

        location ~* ^/shake/([a-zA-Z0-9\-]+)/update {
            upload_pass /internalupload;
            upload_store /mnt/tmpuploads 1;
            upload_store_access all:rw;

            upload_set_form_field "${upload_field_name}_name" "$upload_file_name";
            upload_set_form_field "${upload_field_name}_content_type" "$upload_content_type";
            upload_set_form_field "${upload_field_name}_path" "$upload_tmp_path";

            upload_aggregate_form_field "${upload_field_name}_sha1" "$upload_file_sha1";
            upload_aggregate_form_field "${upload_field_name}_size" "$upload_file_size";

            upload_pass_form_field "_xsrf";
            upload_pass_form_field "title";
            upload_pass_form_field "description";

            upload_cleanup 400 404 499 500-505;
        }

        location = /account/settings/profile/save {
            upload_pass /internalupload;
            upload_store /mnt/tmpuploads 1;
            upload_store_access all:rw;

            upload_set_form_field "${upload_field_name}_name" "$upload_file_name";
            upload_set_form_field "${upload_field_name}_content_type" "$upload_content_type";
            upload_set_form_field "${upload_field_name}_path" "$upload_tmp_path";

            upload_aggregate_form_field "${upload_field_name}_sha1" "$upload_file_sha1";
            upload_aggregate_form_field "${upload_field_name}_size" "$upload_file_size";

            upload_pass_form_field "_xsrf";
            upload_pass_form_field "full_name";
            upload_pass_form_field "about";
            upload_pass_form_field "website";

            upload_cleanup 400 404 499 500-505;
        }

        location = /api/upload {
            upload_pass /internalupload;
            upload_store /mnt/tmpuploads 1;
            upload_store_access all:rw;

            upload_set_form_field "${upload_field_name}_name" "$upload_file_name";
            upload_set_form_field "${upload_field_name}_content_type" "$upload_content_type";
            upload_set_form_field "${upload_field_name}_path" "$upload_tmp_path";

            upload_aggregate_form_field "${upload_field_name}_sha1" "$upload_file_sha1";
            upload_aggregate_form_field "${upload_field_name}_size" "$upload_file_size";

            upload_pass_form_field "title";
            upload_pass_form_field "description";
            upload_pass_form_field "shake_id";

            upload_cleanup 400 404 499 500-505;
        }

        location ~* ^/s3/((?:account)/\d+/[a-zA-Z0-9_-]+\.jpg) {
            set $download_url http://mltshp-dev.fakes3:8000/$1;
            proxy_hide_header Content-Disposition;
            proxy_hide_header Content-Type;
            proxy_set_header X-Rewrite-URL $download_url;
            proxy_max_temp_file_size 0;
            proxy_pass $download_url;
            proxy_pass_header Surrogate-Control;
        }

        location ~* ^/s3/((?:originals|webm|mp4|smalls|thumbs)/[a-zA-Z0-9]+)(.*) {
            internal;

            set $download_uri $1;
            set $download_url http://mltshp-dev.fakes3:8000/$download_uri$is_args$args;
            proxy_hide_header Content-Disposition;
            proxy_hide_header Content-Type;
            proxy_set_header X-Rewrite-URL $download_url;
            proxy_max_temp_file_size 0;
            proxy_pass $download_url;
            proxy_pass_header Surrogate-Control;
        }

        location = /favicon.ico {
            rewrite (.*) /static/favicon.ico;
        }

        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }

        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }
    }
}
